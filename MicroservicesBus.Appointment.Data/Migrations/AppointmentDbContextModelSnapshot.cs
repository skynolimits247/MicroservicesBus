// <auto-generated />
using MicroservicesBus.Appointment.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroservicesBus.Appointment.Data.Migrations
{
    [DbContext(typeof(AppointmentDbContext))]
    partial class AppointmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MicroservicesBus.Appointment.Domain.Models.AppointmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("int");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "omaxe building flat 304",
                            AppointmentStatus = 1,
                            AssignedTo = 2,
                            City = "Delhi",
                            CreatedBy = 1,
                            Description = "electric switch not working",
                            Specialization = "electrician",
                            State = "Delhi",
                            Zip = "110011"
                        },
                        new
                        {
                            Id = 2,
                            Address = "omaxe building flat 304",
                            AppointmentStatus = 1,
                            AssignedTo = 4,
                            City = "Delhi",
                            CreatedBy = 1,
                            Description = "door fixtures are broken and latches are not fitting well",
                            Specialization = "carpenter",
                            State = "Delhi",
                            Zip = "110011"
                        },
                        new
                        {
                            Id = 3,
                            Address = "omaxe building flat 304",
                            AppointmentStatus = 1,
                            AssignedTo = 3,
                            City = "Delhi",
                            CreatedBy = 1,
                            Description = "car needs servicing",
                            Specialization = "mechanic",
                            State = "Delhi",
                            Zip = "110011"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
